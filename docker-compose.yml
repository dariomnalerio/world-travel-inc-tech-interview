services:
  client-prod:
    image: client-prod
    build:
      context: ./client
      dockerfile: Dockerfile.prod
    environment:
      - NODE_ENV=production
    ports:
      - "80:80"
    networks:
      - app-network-prod
    profiles: ["prod"]
  
  client-dev:
    image: client-dev
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    environment:
      - NODE_ENV=development
    volumes:
      - ./client:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    networks:
      - app-network-dev
    profiles: ["dev"]

  client-test:
    image: client-test
    build:
      context: ./client
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=test
    volumes:
      - ./client:/app
    ports:
      - "80:80"
    networks:
      - app-network-test
    command: ["npm", "run", "preview"]
    profiles: ["test"]

  server-prod:
    image: server-prod
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL_PROD=${DATABASE_URL_PROD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB_PROD=${POSTGRES_DB_PROD}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - DOG_API_URL=${DOG_API_URL}
      - JWT_SECRET=${JWT_SECRET}
      - SERVER_ENV=production
      
    depends_on:
      - db-prod
    profiles: ["prod"]
    networks:
      - app-network-prod
  
  server-dev:
    image: server-dev
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL_DEV=${DATABASE_URL_DEV}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB_DEV=${POSTGRES_DB_DEV}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - DOG_API_URL=${DOG_API_URL}
      - JWT_SECRET=${JWT_SECRET}
      - SERVER_ENV=development
      - WATCHPACK_POLLING=true
    volumes:
      - ./server:/app
    depends_on:
      - db-dev
    profiles: ["dev"]
    networks:
      - app-network-dev
  
  server-test:
    image: server-test
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL_TEST=${DATABASE_URL_TEST}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB_TEST=${POSTGRES_DB_TEST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - DOG_API_URL=${DOG_API_URL}
      - JWT_SECRET=${JWT_SECRET}
      - SERVER_ENV=testing
    depends_on:
      - db-test
    profiles: ["test"]
    networks:
      - app-network-test
  
  db-prod:
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB_PROD}
    profiles: ["prod"]
  
  db-dev:
    image: postgres:14
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD:  ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB_DEV}
    profiles: ["dev"]
  
  db-test:
    image: postgres:14
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD:  ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB_TEST}
    profiles: ["test"]
  
networks:
  app-network-prod:
    driver: bridge
  app-network-dev:
    driver: bridge
  app-network-test:
    driver: bridge